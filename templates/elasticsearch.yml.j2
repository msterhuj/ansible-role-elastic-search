# ================================ Ansible Note ================================
#
# This is file has been generated by ansible.
# Do not edit it directly.
# Generated at {{ template_run_date }} 
#
# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please consult the documentation for further information on configuration options:
# https://www.elastic.co/guide/en/elasticsearch/reference/index.html
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
{% if es_config.cluster.name is defined %}
cluster.name: {{ es_config.cluster.name }}
{% else %}
# cluster.name: my-application
{% endif %}

#
# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
{% if es_config.node.name is defined %}
node.name: {{ es_config.node.name }}
{% else %}
# node.name: node-1
{% endif %}
#
# Add custom attributes to the node:
#
{% if es_config.node.attr is defined %}
{% for key, value in es_config.node.attr.items() %}
node.attr.{{ key }}: {{ value }}
{% endfor %}
{% else %}
#node.attr.rack: r1
{% endif %}
#
# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
{% if es_config.path.data is defined %}
path.data: {{ es_config.path.data }}
{% else %}
path.data: /var/lib/elasticsearch
{% endif %}
#
# Path to log files:
#
{% if es_config.path.logs is defined %}
path.logs: {{ es_config.path.logs }}
{% else %}
path.logs: /var/log/elasticsearch
{% endif %}
#
# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
{% if es_config.bootstrap_memory_lock is defined %}
bootstrap.memory_lock: {{ es_config.bootstrap_memory_lock }}
{% else %}
#bootstrap.memory_lock: true
{% endif %}
#
# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# By default Elasticsearch is only accessible on localhost. Set a different
# address here to expose this node on the network:
#
{% if es_config.network_host is defined %}
network.host: {{ es_config.network_host }}
{% else %}
#network.host: 192.168.0.1
{% endif %}
#
# By default Elasticsearch listens for HTTP traffic on the first free port it
# finds starting at 9200. Set a specific HTTP port here:
#
{% if es_config.http.port is defined %}
http.port: {{ es_config.http.port }}
{% else %}
#http.port: 9200
{% endif %}
#
# For more information, consult the network module documentation.
#
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when this node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#
{% if es_hosts is defined %}
discovery.seed_hosts:  {{ es_hosts }}
{% else %}
#discovery.seed_hosts: ["host1", "host2"]
{% endif %}
#
# Bootstrap the cluster using an initial set of master-eligible nodes:
#
{% if es_master_hosts is defined %}
cluster.initial_master_nodes: {{ es_master_hosts }}
{% else %}
cluster.initial_master_nodes: ["{{ es_config.node.name }}"]
{% endif %}
#
# For more information, consult the discovery and cluster formation module documentation.
#
# --------------------------------- Readiness ----------------------------------
#
# Enable an unauthenticated TCP readiness endpoint on localhost
#
#readiness.port: 9399
#
# ---------------------------------- Various -----------------------------------
#
# Allow wildcard deletion of indices:
#
#action.destructive_requires_name: false

#----------------------- BEGIN SECURITY AUTO CONFIGURATION -----------------------
#
# The following settings, TLS certificates, and keys have been automatically
# generated to configure Elasticsearch security features on 23-11-2022 08:55:13
#
# --------------------------------------------------------------------------------

# Enable security features
{% if es_config.xpack.security.enabled is defined %}
xpack.security.enabled: {{ xpack.security.enabled }}
{% else %}
xpack.security.enabled: true
{% endif %}

{% if xpack.security.enrollment.enabled is defined %}
xpack.security.enrollment.enabled: {{ xpack.security.enrollment.enabled }}
{% else %}
xpack.security.enrollment.enabled: true
{% endif %}

# Enable encryption for HTTP API client connections, such as Kibana, Logstash, and Agents
xpack.security.http.ssl:
  enabled: true
  keystore.path: certs/http.p12

# Enable encryption and mutual authentication between cluster nodes
xpack.security.transport.ssl:
  enabled: true
  verification_mode: certificate
  keystore.path: certs/transport.p12
  truststore.path: certs/transport.p12

# Allow HTTP API connections from anywhere
# Connections are encrypted and require user authentication
{% if http.host is defined %}
http.host: {{ http.host }}
{% else %}
http.host: 0.0.0.0
{% endif %}

# Allow other nodes to join the cluster from anywhere
# Connections are encrypted and mutually authenticated
#transport.host: 0.0.0.0

#----------------------- END SECURITY AUTO CONFIGURATION -------------------------